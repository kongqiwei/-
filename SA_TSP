%模拟退火算法
%TSP问题
clc,clear
T0 =500;%初始温度
Tend = 1e-4; %终止温度
L=200; %各个温度下的链长
q=0.98; %降温速率
cityNum = 30; %城市个数
City = rand(cityNum,2); %随机生成城市的坐标
%%%%%%%%%%%%%%主程序%%%%%%%%%%%%%%%%%%%%
D = Distance(City);
N = cityNum;
S1 = randperm(N); %产生一个随机解
%解方程，计算迭代次数
Time = ceil(double(solve(['1000*(0.9)^x',num2str(Tend)])));
count = 0; %迭代计数器
Obj = zeros(Time,1);    %每代路径和
track = zeros(Time,N);  %每代最优解
%迭代
while T0>Tend
    count = count + 1;
    temp = zeros(L,N+1);
    for k = 1:L
        %产生L组新解
        S2 = newSolution(S1);
        [S1,R] = Metropolis(S1,S2,D,T0);
        temp(k,:)=[S1 R];
    end
    %记录每次迭代过程的最优路线
    [d0,index] = min(temp(:,end));
    if count == 1 || d0 <Obj(count-1)
        Obj(count) = d0;
    else
        Obj(count)=Obj(count - 1);
    end
     
    track(count,:)=temp(index,1:end-1);
    T0 = q*T0;
end
fprintf('迭代次数：%d\n',count);
fprintf('最短路径：%f\n',Obj(end));
%迭代图
figure
plot(1:count,Obj);
xlabel('迭代次数');
ylabel('距离');
title('优化过程');
DrawPath(track(end,:),City);
